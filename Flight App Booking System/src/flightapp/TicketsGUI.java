/*
 * FirstClass.java
 * 
 * Version Information Final
 *
 * Date 04/12/2017

 * @author Lorcan Bowens, x16410236
 *
 */
package flightapp;

import flightapp.FirstClass;
import flightapp.Flight;
import flightapp.SecondClass;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author x16410236
 */
public class TicketsGUI extends javax.swing.JFrame {
    
    //Creating a new instance of the super class
    private Flight f;
    //Creating ArrayList to store flight booking information
    private ArrayList<Flight> info;
    //Creating Array to store number of Flights
    private Flight plan[];
    //Making room for following flight plan entry, counter 
    int size;

    /**
     * Creates new form TicketsGUI
     */
    public TicketsGUI() {
        initComponents();
        //Setting labels and text fields to be hidden
        destLbl.setVisible(false);
        destCombo.setVisible(false);
        mealLbl.setVisible(false);
        mealCombo.setVisible(false);
        timeLbl.setVisible(false);
        timeCombo.setVisible(false);
        noTicketLbl.setVisible(false);
        noTicketTF.setVisible(false);
        dateLbl.setVisible(false);
        monthCombo.setVisible(false);
        dayCombo.setVisible(false);
        totalLbl.setVisible(false);
        totalValueLbl.setVisible(false);
        vatLbl.setVisible(false);
        costsBtn.setVisible(false);
        symbolLbl.setVisible(false);
        
        //Declaring arraylist
        info = new ArrayList<>();
        
        //Declaring an array
        plan = new Flight[10];
        double incVat=0;
        size = 0; // counter 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        headLbl = new javax.swing.JLabel();
        classLbl = new javax.swing.JLabel();
        classCombo = new javax.swing.JComboBox<>();
        destLbl = new javax.swing.JLabel();
        destCombo = new javax.swing.JComboBox<>();
        noTicketLbl = new javax.swing.JLabel();
        noTicketTF = new javax.swing.JTextField();
        dateLbl = new javax.swing.JLabel();
        monthCombo = new javax.swing.JComboBox<>();
        dayCombo = new javax.swing.JComboBox<>();
        imgLbl = new javax.swing.JLabel();
        confirmBtn = new javax.swing.JButton();
        infoBtn = new javax.swing.JToggleButton();
        totalLbl = new javax.swing.JLabel();
        costBtn = new javax.swing.JButton();
        paymentBtn = new javax.swing.JButton();
        mealLbl = new javax.swing.JLabel();
        mealCombo = new javax.swing.JComboBox<>();
        timeLbl = new javax.swing.JLabel();
        timeCombo = new javax.swing.JComboBox<>();
        vatLbl = new javax.swing.JLabel();
        totalValueLbl = new javax.swing.JLabel();
        costsBtn = new javax.swing.JButton();
        symbolLbl = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        headLbl.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        headLbl.setForeground(new java.awt.Color(7, 7, 112));
        headLbl.setText("Ticket Selection");

        classLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        classLbl.setText("Would you like to fly first or second class?");

        classCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        classCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "First Class", "Standard Class" }));
        classCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classComboActionPerformed(evt);
            }
        });

        destLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        destLbl.setText("Where would you like to fly to?");

        destCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        destCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Heathrow LHR", "Amsterdam AMS", "Frankfurt FRA", "Munich MUC", "Charles de Gaulle CDG", "Istanbul IST", "Gatwick LGW", "Copenhagen CPH", "Barcelona BCN", "Vienna VIE", "Paris ORY", "Warsaw WAW" }));
        destCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destComboActionPerformed(evt);
            }
        });

        noTicketLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        noTicketLbl.setText("How many tickets would you like to book?");

        noTicketTF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        noTicketTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noTicketTFActionPerformed(evt);
            }
        });

        dateLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dateLbl.setText("Here is the list of available dates for the selected flights:");

        monthCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        monthCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January 2018", "March 2018", "May 2018", "July 2018", "August 2018", "October 2018", "November 2018", "December 2018", "January 2019", "February 2019", "June 2019" }));
        monthCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthComboActionPerformed(evt);
            }
        });

        dayCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dayCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1st", "5th", "18th", "21st", "22nd", "28th" }));
        dayCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayComboActionPerformed(evt);
            }
        });

        imgLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/logo.png"))); // NOI18N
        imgLbl.setText("jLabel2");

        confirmBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        confirmBtn.setText("Confirm Flight Plan");
        confirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtnActionPerformed(evt);
            }
        });

        infoBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        infoBtn.setText("Preview Flight Info");
        infoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoBtnActionPerformed(evt);
            }
        });

        totalLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        totalLbl.setText("Total Cost:");

        costBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        costBtn.setText("Calculate Flight Cost");
        costBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costBtnActionPerformed(evt);
            }
        });

        paymentBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        paymentBtn.setText("Proceed To Payment");
        paymentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentBtnActionPerformed(evt);
            }
        });

        mealLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mealLbl.setText("What meal would you like during your flight?");

        mealCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mealCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Spaghetti Bolognese", "Spaghetti Carbonara", "Full Irish Breakfast", "Chicken Carvery", "Beef Carvery", "Ranch Salad" }));
        mealCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mealComboActionPerformed(evt);
            }
        });

        timeLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        timeLbl.setText("What time would you like to fly at?");

        timeCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        timeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Morning", "Afternoon", "Evening" }));
        timeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeComboActionPerformed(evt);
            }
        });

        vatLbl.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        vatLbl.setText("*VAT is caculated at 23%");

        totalValueLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        costsBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        costsBtn.setText("View Cost Breakdown");
        costsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costsBtnActionPerformed(evt);
            }
        });

        symbolLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        symbolLbl.setText("€");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(imgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mealLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mealCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(headLbl)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(destLbl)
                                .addGap(164, 164, 164)
                                .addComponent(destCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(confirmBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(infoBtn)
                                .addGap(33, 33, 33)
                                .addComponent(paymentBtn))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(noTicketLbl)
                                    .addComponent(dateLbl)
                                    .addComponent(timeLbl)
                                    .addComponent(costBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(noTicketTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dayCombo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(monthCombo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(timeCombo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(classLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(classCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(totalLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(symbolLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalValueLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(vatLbl)
                                .addGap(18, 18, 18)
                                .addComponent(costsBtn)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(1, 1, 1)))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(headLbl)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classLbl)
                    .addComponent(classCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mealLbl)
                    .addComponent(mealCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destLbl)
                    .addComponent(destCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLbl)
                    .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(dayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeLbl)
                    .addComponent(timeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noTicketLbl)
                    .addComponent(noTicketTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(costBtn)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totalLbl)
                            .addComponent(symbolLbl))
                        .addComponent(totalValueLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(costsBtn)
                    .addComponent(vatLbl))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paymentBtn)
                    .addComponent(infoBtn)
                    .addComponent(confirmBtn))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void classComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classComboActionPerformed
        // TODO add your handling code here:
        //Declaring instances of First and Second class, determined by a users selection
        if(classCombo.getSelectedItem().equals("First Class")){
            mealLbl.setVisible(true);
            mealCombo.setVisible(true);
            f = new FirstClass();
        }
        else{
            destLbl.setVisible(true);
            destCombo.setVisible(true);
            mealLbl.setVisible(false);
            mealCombo.setVisible(false);
            f = new SecondClass();
            JOptionPane.showMessageDialog(null, "Standard passengers can avail of a 15% discount right now! Use this code to calculate the cost: 'FLY15'", "Here's a discount just for you!", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_classComboActionPerformed

    private void noTicketTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noTicketTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noTicketTFActionPerformed

    private void destComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destComboActionPerformed
        // TODO add your handling code here:
        //Setting desired variables to be seen
        dateLbl.setVisible(true);
        monthCombo.setVisible(true);
        dayCombo.setVisible(true);
        //Setting a specific reference number for every destination option
        if(destCombo.getSelectedItem().equals("Heathrow LHR")){
            if(f instanceof FirstClass){
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(70);
                f.setRefNum("0928379LHR");
            }
            else{
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(70);
                f.setRefNum("0928379LHR");
            }
        }
        else if(destCombo.getSelectedItem().equals("Amsterdam AMS")){
            if(f instanceof FirstClass){
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(70);
                f.setRefNum("0928379AMS");
            }
            else{
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(70);
                f.setRefNum("0928379AMS");
            }
        }
        else if(destCombo.getSelectedItem().equals("Frankfurt FRA")){
            if(f instanceof FirstClass){
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(114);
                f.setRefNum("0928379FRA");
            }
            else{
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(114);
                f.setRefNum("0928379FRA");
            }
        }
        else if(destCombo.getSelectedItem().equals("Munich MUC")){
            if(f instanceof FirstClass){
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(34);
                f.setRefNum("0928379MUC");
            }
            else{
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(34);
                f.setRefNum("0928379MUC");
            }
        }
        else if(destCombo.getSelectedItem().equals("Charles de Gaulle CDG")){
            if(f instanceof FirstClass){
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(84);
                f.setRefNum("0928379CDG");
            }
            else{
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(84);
                f.setRefNum("0928379CDG");
            }
        }
        else if(destCombo.getSelectedItem().equals("Istanbul IST")){
            if(f instanceof FirstClass){
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(169);
                f.setRefNum("0928379IST");
            }
            else{
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(169);
                f.setRefNum("0928379IST");
            }
        }
        else if(destCombo.getSelectedItem().equals("Gatwick LGW")){
            if(f instanceof FirstClass){
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(30);
                f.setRefNum("0928379LGW");
            }
            else{
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(30);
                f.setRefNum("0928379LGW");
            }
        }
        else if(destCombo.getSelectedItem().equals("Copenhagen CPH")){
            if(f instanceof FirstClass){
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(32);
                f.setRefNum("0928379CPH");
            }
            else{
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(32);
                f.setRefNum("0928379CPH");
            }
        }
        else if(destCombo.getSelectedItem().equals("Barcelona BCN")){
            if(f instanceof FirstClass){
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(40);
                f.setRefNum("0928379BCN");
            }
            else{
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(40);
                f.setRefNum("0928379BCN");
            }
        }
        else if(destCombo.getSelectedItem().equals("Vienna VIH")){
            if(f instanceof FirstClass){
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(149);
                f.setRefNum("0928379VIH");
            }
            else{
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(149);
                f.setRefNum("0928379VIH");
            }
        }
        else if(destCombo.getSelectedItem().equals("Paris ORY")){
            if(f instanceof FirstClass){
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(47);
                f.setRefNum("0928379ORY");
            }
            else{
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(47);
                f.setRefNum("0928379ORY");
            }
        }
        else{
            if(f instanceof FirstClass){
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(57);
                f.setRefNum("0928379WAW");
            }
            else{
                f.setDest(String.valueOf(destCombo.getSelectedItem()));
                f.setDestPrice(57);
                f.setRefNum("0928379WAW");
            }
        }
    }//GEN-LAST:event_destComboActionPerformed

    private void mealComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mealComboActionPerformed
        // TODO add your handling code here:
        destLbl.setVisible(true);
        destCombo.setVisible(true);
        //Setting selected meal plan
        if(mealCombo.getSelectedItem().equals("Spaghetti Bolognese")){
            if(f instanceof FirstClass){
                ((FirstClass) (f)).setMealPlan(String.valueOf(mealCombo.getSelectedItem()));
            }
            else{
                ((FirstClass) (f)).setMealPlan(String.valueOf(mealCombo.getSelectedItem()));
            }
        }
        else if(mealCombo.getSelectedItem().equals("Spaghetti Carbonara")){
            if(f instanceof FirstClass){
                ((FirstClass) (f)).setMealPlan(String.valueOf(mealCombo.getSelectedItem()));
            }
            else{
                ((FirstClass) (f)).setMealPlan(String.valueOf(mealCombo.getSelectedItem()));
            }
        }
        else if(mealCombo.getSelectedItem().equals("Full Irish Breakfast")){
            if(f instanceof FirstClass){
                ((FirstClass) (f)).setMealPlan(String.valueOf(mealCombo.getSelectedItem()));
            }
            else{
                ((FirstClass) (f)).setMealPlan(String.valueOf(mealCombo.getSelectedItem()));
            }
        }
        else if(mealCombo.getSelectedItem().equals("Chicken Carvery")){
            if(f instanceof FirstClass){
                ((FirstClass) (f)).setMealPlan(String.valueOf(mealCombo.getSelectedItem()));
            }
            else{
                ((FirstClass) (f)).setMealPlan(String.valueOf(mealCombo.getSelectedItem()));
            }
        }
        else if(mealCombo.getSelectedItem().equals("Beef Carvery")){
            if(f instanceof FirstClass){
                ((FirstClass) (f)).setMealPlan(String.valueOf(mealCombo.getSelectedItem()));
            }
            else{
                ((FirstClass) (f)).setMealPlan(String.valueOf(mealCombo.getSelectedItem()));
            }
        }
        else{
            if(f instanceof FirstClass){
                ((FirstClass) (f)).setMealPlan(String.valueOf(mealCombo.getSelectedItem()));
            }
            else{
                ((FirstClass) (f)).setMealPlan(String.valueOf(mealCombo.getSelectedItem()));
            }
        }
    }//GEN-LAST:event_mealComboActionPerformed

    private void monthComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthComboActionPerformed
        // TODO add your handling code here:
        //Setting selected month
        if(monthCombo.getSelectedItem().equals("January 2018")){
            if(f instanceof FirstClass){
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
            else{
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
        }
        else if(monthCombo.getSelectedItem().equals("March 2018")){
            if(f instanceof FirstClass){
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
            else{
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
        }
        else if(monthCombo.getSelectedItem().equals("May 2018")){
            if(f instanceof FirstClass){
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
            else{
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
        }
        else if(monthCombo.getSelectedItem().equals("July 2018")){
            if(f instanceof FirstClass){
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
            else{
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
        }
        else if(monthCombo.getSelectedItem().equals("August 2018")){
            if(f instanceof FirstClass){
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
            else{
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
        }
        else if(monthCombo.getSelectedItem().equals("October 2018")){
            if(f instanceof FirstClass){
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
            else{
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
        }
        else if(monthCombo.getSelectedItem().equals("November 2018")){
            if(f instanceof FirstClass){
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
            else{
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
        }
        else if(monthCombo.getSelectedItem().equals("December 2018")){
            if(f instanceof FirstClass){
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
            else{
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
        }
        else if(monthCombo.getSelectedItem().equals("January 2019")){
            if(f instanceof FirstClass){
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
            else{
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
        }
        else if(monthCombo.getSelectedItem().equals("February 2018")){
            if(f instanceof FirstClass){
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
            else{
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
        }
        else{
            if(f instanceof FirstClass){
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
            else{
                f.setFlightMonth(String.valueOf(monthCombo.getSelectedItem()));
            }
        }
    }//GEN-LAST:event_monthComboActionPerformed

    private void dayComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayComboActionPerformed
        // TODO add your handling code here:
        timeLbl.setVisible(true);
        timeCombo.setVisible(true);
        //Setting selected day
        if(dayCombo.getSelectedItem().equals("1st")){
            if(f instanceof FirstClass){
                f.setFlightDay(String.valueOf(dayCombo.getSelectedItem()));
            }
            else{
                f.setFlightDay(String.valueOf(dayCombo.getSelectedItem()));
            }
        }
        else if(dayCombo.getSelectedItem().equals("5th")){
            if(f instanceof FirstClass){
                f.setFlightDay(String.valueOf(dayCombo.getSelectedItem()));
            }
            else{
                f.setFlightDay(String.valueOf(dayCombo.getSelectedItem()));
            }
        }
        else if(dayCombo.getSelectedItem().equals("18th")){
            if(f instanceof FirstClass){
                f.setFlightDay(String.valueOf(dayCombo.getSelectedItem()));
            }
            else{
                f.setFlightDay(String.valueOf(dayCombo.getSelectedItem()));
            }
        }
        else if(dayCombo.getSelectedItem().equals("21st")){
            if(f instanceof FirstClass){
                f.setFlightDay(String.valueOf(dayCombo.getSelectedItem()));
            }
            else{
                f.setFlightDay(String.valueOf(dayCombo.getSelectedItem()));
            }
        }
        else if(dayCombo.getSelectedItem().equals("22nd")){
            if(f instanceof FirstClass){
                f.setFlightDay(String.valueOf(dayCombo.getSelectedItem()));
            }
            else{
                f.setFlightDay(String.valueOf(dayCombo.getSelectedItem()));
            }
        }
        else{
            if(f instanceof FirstClass){
                f.setFlightDay(String.valueOf(dayCombo.getSelectedItem()));
            }
            else{
                f.setFlightDay(String.valueOf(dayCombo.getSelectedItem()));
            }
        }
    }//GEN-LAST:event_dayComboActionPerformed

    private void timeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeComboActionPerformed
        // TODO add your handling code here:
        noTicketLbl.setVisible(true);
        noTicketTF.setVisible(true);
        //Setting selected flight time
        if(timeCombo.getSelectedItem().equals("Morning")){
            if(f instanceof FirstClass){
                f.setFlightTime(String.valueOf(timeCombo.getSelectedItem()));
            }
            else{
                f.setFlightTime(String.valueOf(timeCombo.getSelectedItem()));
            }
        }
        else if(timeCombo.getSelectedItem().equals("Afternoon")){
            if(f instanceof FirstClass){
                f.setFlightTime(String.valueOf(timeCombo.getSelectedItem()));
            }
            else{
                f.setFlightTime(String.valueOf(timeCombo.getSelectedItem()));
            }
        }
        else{
            if(f instanceof FirstClass){
                f.setFlightTime(String.valueOf(timeCombo.getSelectedItem()));
            }
            else{
                f.setFlightTime(String.valueOf(timeCombo.getSelectedItem()));
            }
        }
    }//GEN-LAST:event_timeComboActionPerformed

    private void costBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costBtnActionPerformed
        // TODO add your handling code here:
        //Calculating cost for instance of First Class
        if(f instanceof FirstClass && mealCombo.getItemCount() == 0 || monthCombo.getItemCount() == 0 || dayCombo.getItemCount() == 0 || timeCombo.getItemCount() == 0 || noTicketTF.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please review your flight details.", "I Think You Forgot Something...", JOptionPane.INFORMATION_MESSAGE);
        }
        else if(f instanceof SecondClass && monthCombo.getItemCount() == 0 || dayCombo.getItemCount() == 0 || timeCombo.getItemCount() == 0 || noTicketTF.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please review your flight details", "I Think You Forgot Something...", JOptionPane.INFORMATION_MESSAGE);
        }
        else if(f instanceof FirstClass){
            totalLbl.setVisible(true);
            totalValueLbl.setVisible(true);
            vatLbl.setVisible(true);
            costsBtn.setVisible(true);
            symbolLbl.setVisible(true);
            f.setNoTicket(Integer.parseInt(noTicketTF.getText()));
            int noTicket = f.getNoTicket();
            int destPrice = f.getDestPrice();
            f.calculateTotal();
            double incVat = f.getIncVat() + (((FirstClass) (f)).getfPrice() * f.getNoTicket());
            totalValueLbl.setText(incVat+" euro");
        }
        //Calculating cost for instance of Second Class
        //Giving discount option
        else if(f instanceof SecondClass){
            //Using boolean with True/False JOptionPane - Online StackOverflow
            f.setCodeOption(JOptionPane.showConfirmDialog(null, "Would you like to use a discount code?", "Please Select", JOptionPane.YES_NO_OPTION));
            if(f.getCodeOption() == JOptionPane.YES_OPTION){ 
                String codeAnswer = JOptionPane.showInputDialog(null, "Please input your discount code:");
                //Checking to see if discount code is correct
                if(codeAnswer.charAt(0) == 'F' && codeAnswer.charAt(1) == 'L' && codeAnswer.charAt(2) == 'Y' && codeAnswer.charAt(3) == '1' && codeAnswer.charAt(4) == '5'){
                    totalLbl.setVisible(true);
                    totalValueLbl.setVisible(true);
                    vatLbl.setVisible(true);
                    costsBtn.setVisible(true);
                    symbolLbl.setVisible(true);
                    JOptionPane.showMessageDialog(null, "Congratulations! You have received a 15% discount!", "WOOHOO!", JOptionPane.INFORMATION_MESSAGE);
                    f.setNoTicket(Integer.parseInt(noTicketTF.getText()));
                    int noTicket = f.getNoTicket();
                    int destPrice = f.getDestPrice();
                    f.calculateTotal();
                    ((SecondClass) (f)).calculateDisc();
                    double incVat = f.getIncVat() - ((SecondClass) (f)).getDiscount();
                    totalValueLbl.setText(incVat+" euro");
                }
                else{
                    totalLbl.setVisible(true);
                    totalValueLbl.setVisible(true);
                    vatLbl.setVisible(true);
                    costsBtn.setVisible(true);
                    symbolLbl.setVisible(true);
                    JOptionPane.showMessageDialog(null, "I'm sorry that code is invalid, we've calculated your total without a discount. You can still try again!", "OOPS!", JOptionPane.INFORMATION_MESSAGE);
                    f.setNoTicket(Integer.parseInt(noTicketTF.getText()));
                    int noTicket = f.getNoTicket();
                    int destPrice = f.getDestPrice();
                    f.calculateTotal();
                    double incVat = f.getIncVat();
                    totalValueLbl.setText(f.getIncVat()+"");
                }
            }
            //Calculating cost for standard class flyers, with no discount code, when "No" option is selected
            else if(f.getCodeOption() == JOptionPane.NO_OPTION){
                totalLbl.setVisible(true);
                totalValueLbl.setVisible(true);
                vatLbl.setVisible(true);
                costsBtn.setVisible(true);
                symbolLbl.setVisible(true);
                JOptionPane.showMessageDialog(null, "Perfect, we've successfully calculated your total!");
                f.setNoTicket(Integer.parseInt(noTicketTF.getText()));
                int noTicket = f.getNoTicket();
                int destPrice = f.getDestPrice();
                f.calculateTotal();
                double incVat = f.getIncVat();
                totalValueLbl.setText(f.getIncVat()+"");
                
            }
        }
               
    }//GEN-LAST:event_costBtnActionPerformed

    private void costsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costsBtnActionPerformed
        // TODO add your handling code here:
        //Showing cost breakdown
        if(f instanceof FirstClass){
            JOptionPane.showMessageDialog(null, "The cost of flying to "+f.getDest()+" is: €"+f.getDestPrice());
            JOptionPane.showMessageDialog(null, "You have booked "+f.getNoTicket()+" First Class ticket(s).");
            JOptionPane.showMessageDialog(null, "Vat is calculated at 23%: "+f.getTotal()+" x 0.23 = "+f.getVat());
            JOptionPane.showMessageDialog(null, "There is a €"+((FirstClass)(f)).getfPrice()+" service charge on First Class tickets.");
        }
        else{
            JOptionPane.showMessageDialog(null, "The cost of flying to "+f.getDest()+" is: €"+f.getDestPrice());
            JOptionPane.showMessageDialog(null, "You have booked "+f.getNoTicket()+" standard ticket(s).");
            JOptionPane.showMessageDialog(null, "Vat is calculated at 23%: "+f.getTotal()+" x 0.23 = "+f.getVat());
        }
    }//GEN-LAST:event_costsBtnActionPerformed

    private void confirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtnActionPerformed
        // TODO add your handling code here:
        //Error statement to ensure that all information is filled by the user before adding to array
        if(f instanceof FirstClass && mealCombo.getItemCount() == 0 || monthCombo.getItemCount() == 0 || dayCombo.getItemCount() == 0 || timeCombo.getItemCount() == 0 || noTicketTF.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please review your flight details.", "I Think You Forgot Something...", JOptionPane.INFORMATION_MESSAGE);
        }
        else if(f instanceof SecondClass && monthCombo.getItemCount() == 0 || dayCombo.getItemCount() == 0 || timeCombo.getItemCount() == 0 || noTicketTF.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please review your flight details", "I Think You Forgot Something...", JOptionPane.INFORMATION_MESSAGE);
        }
        //Adding to array
        else if(f instanceof FirstClass){
            f.getDest();
            f.getFlightMonth();
            f.getFlightDay();
            f.getFlightTime();
            f.getNoTicket();
            f.getRefNum();
            ((FirstClass) (f)).getMealPlan();
            info.add(f);
            plan[size] = f;
            size++;
            JOptionPane.showMessageDialog(null, "Congratulations, you're going to "+f.getDest()+"!", "Success!", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            f.getDest();
            f.getFlightMonth();
            f.getFlightDay();
            f.getFlightTime();
            f.getNoTicket();
            f.getRefNum();
            info.add(f);
            plan[size] = f;
            size++;
            JOptionPane.showMessageDialog(null, "Congratulations, you're going to "+f.getDest()+"!", "Success!", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_confirmBtnActionPerformed

    private void infoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoBtnActionPerformed
        // TODO add your handling code here:
        for(Flight f : info){ // for loop to loop through the array
            if(f instanceof FirstClass){
                JOptionPane.showMessageDialog(null, " Destination: "+f.getDest()+"\n Meal: "+((FirstClass) (f)).getMealPlan()+"\n Date: "+f.getFlightDay()+" "+f.getFlightMonth()+"\n Time: "+f.getFlightTime()+"\n Ticket Amount: "+f.getNoTicket()+"\n Reference Number: "+f.getRefNum());
            }
            else{
                JOptionPane.showMessageDialog(null, " Destination: "+f.getDest()+"\n Date: "+f.getFlightDay()+" "+f.getFlightMonth()+"\n Time: "+f.getFlightTime()+"\n Ticket Amount: "+f.getNoTicket()+"\n Reference Number: "+f.getRefNum());
            }
        }
    }//GEN-LAST:event_infoBtnActionPerformed

    private void paymentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentBtnActionPerformed
        // TODO add your handling code here:
        PaymentGUI p = new PaymentGUI(); //Creating a new instance of PaymentGUI
        p.setVisible(true); //Setting paymentGUI to visible 
        p.setFlight(f); //Sending the arraylist f to paymentGUI p
        this.dispose(); //Hiding current GUI
        
    }//GEN-LAST:event_paymentBtnActionPerformed

    //Reading and writing to a file
    public void writeToFile() {
        try {
            File f = new File("booking.txt");
            FileOutputStream fStream = new FileOutputStream(f);
            ObjectOutputStream oStream = new ObjectOutputStream(fStream);
            oStream.writeObject(plan);
            oStream.close();
        } catch (IOException ex) {
            System.out.println(ex);
        }
    }

    public void readFromFile() {
        try {
            File f = new File("booking.txt");
            FileInputStream fStream = new FileInputStream(f);
            ObjectInputStream oStream = new ObjectInputStream(fStream);
            
            plan = (Flight[])oStream.readObject();
            oStream.close();
            
        } catch (IOException | ClassNotFoundException ex) {
            System.out.println(ex);
        }   
    }
    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicketsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicketsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicketsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicketsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TicketsGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> classCombo;
    private javax.swing.JLabel classLbl;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JButton costBtn;
    private javax.swing.JButton costsBtn;
    private javax.swing.JLabel dateLbl;
    private javax.swing.JComboBox<String> dayCombo;
    private javax.swing.JComboBox<String> destCombo;
    private javax.swing.JLabel destLbl;
    private javax.swing.JLabel headLbl;
    private javax.swing.JLabel imgLbl;
    private javax.swing.JToggleButton infoBtn;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox<String> mealCombo;
    private javax.swing.JLabel mealLbl;
    private javax.swing.JComboBox<String> monthCombo;
    private javax.swing.JLabel noTicketLbl;
    private javax.swing.JTextField noTicketTF;
    private javax.swing.JButton paymentBtn;
    private javax.swing.JLabel symbolLbl;
    private javax.swing.JComboBox<String> timeCombo;
    private javax.swing.JLabel timeLbl;
    private javax.swing.JLabel totalLbl;
    private javax.swing.JLabel totalValueLbl;
    private javax.swing.JLabel vatLbl;
    // End of variables declaration//GEN-END:variables
}
